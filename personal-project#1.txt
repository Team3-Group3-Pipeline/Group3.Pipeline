1. what is git?
Git is a version control system which lets you track changes you make to your files over time. With Git, you can revert to various states of your files (like a time traveling machine). You can also make a copy of your file, make changes to that copy, and then merge these changes to the original copy.

2. what do you understand by version control?
Version control allows software teams to keep track of changes to codes, while enhancing communication and collaboration between team members. These changes could be data, coding scripts, notes, etc.

3. How can you contribute to a project in GitHub?
a) Join the GitHub organization and clone the project repository to your local machine (local repository) {git clone http://repo_name)
b) Create a new branch from the main / master branch to work on {git branch -b ticket#/name}
c) Implement the code changes and add comments.
d) When done, do a Ògit add . Ó, then a Ògit commit -m commentsÓ  and a Ògit pushÓ
e) On Github, compare the Ònew pull requestÓ to either the feature or development. If none, to main/master as a last resort. The assign it to a senior engineer for review and approval.
f) If there are comments or other changes needed, make the changes in your local repository and repeat steps a-e above. 
g) Once approved, merge to the designated branch and delete your branch.


4. create a file called "yourname" and push to your remote repository


5. Complete the following commands by stating their use cases:
- git init --> initialized a git repository
- git pull --> pull the code changes from a remote repository to your local repository
- git push --> use to push your code from local repository to a remote repository
- git add $filename --> use to move $filename from the working area to the staging area within a branch 
- git clone --> use to clone a remote repository to a local environment 
- git branch --> use to show the present branches 
- git checkout --> use to switch between branches
- git commit --> use to move codes from staging area into a repository
- git switch --> use to switch between branches
- git config --global user.name --> use to set the author global username id 
- git config --global user.email --> use to set author global email id 
- git fetch  --> use to fetch down all the branches from a remote repository
- git remote -v --> use to show the registered remote repository on a local environment 
- git remote add --> use to register a remote repository to a local environment

NB: Please complete by just one sentence of what each command is use for due friday midnight
